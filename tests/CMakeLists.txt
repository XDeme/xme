option(XME_TESTS_LIBCXX "Use libc++ to test xme" OFF)
if(${XME_TESTS_LIBCXX})
    message(STATUS "Using libc++ to test XME Library")
endif()

function(CreateTest NAME)
    add_executable(test_${NAME} ${NAME}.cpp)
    target_link_libraries(test_${NAME} PRIVATE xme)

    if(${XME_TESTS_LIBCXX})
        target_compile_options(test_${NAME} PRIVATE -stdlib=libc++)
        target_link_options(test_${NAME} PRIVATE -lc++)
    endif()

    target_compile_options(test_${NAME} PRIVATE -Wall -Wextra -Wpedantic -Wshadow -Wno-missing-braces)
    target_compile_features(test_${NAME} PRIVATE cxx_std_20)
    add_test(NAME test_${NAME} COMMAND test_${NAME})
endfunction()

add_subdirectory(algorithm)
add_subdirectory(bit)
add_subdirectory(container)
add_subdirectory(functional)
add_subdirectory(iterators)
add_subdirectory(math)
add_subdirectory(platform)
add_subdirectory(utility)

if (${PROJECT_IS_TOP_LEVEL} OR ${XME_BUILD_MODULES})
    add_subdirectory(modules)
endif ()
